require(["jquery", "underscore", "backbone"],function (e, t, n) {
    var r = this.Tornado || {}, i = this.Tornado = r;
    return i.Operator = {equals: ["==", "eq", "equals", "equals_to"], unequals: ["!=", "ne", "neq", "does_not_equal", "not_equal_to"], gt: [">", "gt"], lt: ["<", "lt"], gte: [">=", "ge", "gte", "geq"], lte: ["<=", "le", "lte", "leq"], element_of: ["in", "element_of"], not_element_of: ["not_in", "not_element_of"], is_null: ["is_null"], is_not_null: ["is_not_null"], like: ["like"], has: ["has"], any: ["any"]}, i.xsrf_token = null, i.Model = n.Model.extend({schema: {}, defaults: {}, urlRoot: null, idAttribute: null, idAttributes: null, relations: [], columnAttributes: [], relationAttributes: [], readonlyAttributes: [], is_numeric: function (e) {
        if (this.schema.hasOwnProperty(e)) {
            if (this.schema[e].type == "Number")return!0;
            if (this.schema[e].type == "Text" && this.schema[e].dataType == "number")return!0
        }
        return!1
    }, is_datetime: function (e) {
        if (this.schema.hasOwnProperty(e)) {
            if (this.schema[e].type == "DateTime")return!0;
            if (this.schema[e].type == "Text" && this.schema[e].dataType == "datetime")return!0
        }
        return!1
    }, getDatetimeAttributes: function () {
        if (this.hasOwnProperty("datetimeAttributes"))return this.datetimeAttributes;
        var e, t, n, r = [];
        for (e = 0, t = this.columnAttributes.length; e < t; e++)n = this.columnAttributes[e], this.is_datetime(n) && r.push(n);
        return this.datetimeAttributes = r, r
    }, parse: function (e, t) {
        var r = n.Model.prototype.parse.call(this, e, t), i, s, o;
        for (i = 0, s = this.getDatetimeAttributes().length; i < s; i++)o = this.datetimeAttributes[i], r[o] = new Date(r[o]);
        return r
    }, sync: function (e, t, r) {
        return i.xsrf_token && (r = r || {}, r.headers = r.headers || {}, r.headers["X-XSRFToken"] = i.xsrf_token), n.sync(e, t, r)
    }, toString: function () {
        var e = this.get("__str__");
        return e ? e : "[object Tornado.Model at " + this.url() + "]"
    }}), i.Collection = n.Collection.extend({page: 0, page_length: 25, num_results: null, hasMore: function () {
        return this.num_results < this.models.length
    }, fetch: function (e) {
        var r = this;
        return e = e ? t.clone(e) : {}, e.data = e.data ? e.data : {}, e.data.page = e.reset || !r.page ? undefined : r.page + 1, n.Collection.prototype.fetch.call(r, e)
    }, parse: function (e) {
        var t = e.objects || e;
        return this.num_results = e.num_results || e.length, this.page = e.page || 1, this.num_results < this.models.length + t.length ? this.trigger("tb.pagination", "load") : this.trigger("tb.pagination", "complete"), t
    }}), i.FilteredCollection = i.Collection.extend({filters: [], filterBy: function (e, n) {
        var r = this;
        t.isArray(e) ? e.length > 2 ? e = {name: e[0], op: e[1], val: e[2]} : e = {name: e[0], val: e[2]} : t.isString(e) && (e = {name: arguments[0], op: arguments[1], val: arguments[2]}, n = arguments[3]), t.defaults(e, {op: "eq"}), n.update && (r.filters = t.reject(r.filters, function (t) {
            return t.name == e["name"]
        })), r.filters.push(e), n.nofetch || r.fetch({reset: !0})
    }, removeFilter: function (e, n) {
        var r = this;
        t.isString(e) ? r.filters = t.reject(r.filters, function (t) {
            return t.name == e
        }) : r.filters = t.reject(r.filters, function (t) {
            return t == e
        }), n.nofetch || r.fetch({reset: !0})
    }, fetch: function (e) {
        var n = this;
        return e = e ? t.clone(e) : {}, e.data = e.data ? e.data : {}, e.data.q = JSON.stringify({filters: n.filters}), i.Collection.prototype.fetch.call(n, e)
    }}), i
}).call(window), require(["jquery", "underscore", "backbone"],function (e, t, n) {
    var r = this.Tornado || {}, i = this.Tornado = r;
    return i.BackboneCollection = n.View.extend({initialize: function () {
        this.options.collection && (t.isString(this.options.collection) ? this.collection = this.options.collection = new window[this.options.collection] : this.collection = this.options.collection), this.template = t.template(this.$el.html().replace(/&lt;/g, "<").replace(/&gt;/g, ">")), this.$el.empty(), this.listenTo(this.collection, "all", this.handleEvent)
    }, handleEvent: function (e) {
        var t = this, n = this.collection;
        if ((e == "hide" || e == "show") && arguments[1]) {
            var r = arguments[1], i = t.$el.find("> [name='" + r.id + "']");
            i[e]()
        }
        e == "reset" && (this.$el.empty(), this.render({reset: !0}))
    }, render: function (e) {
        var n = this.$el, r = this, i = this.collection;
        return e = t.extend(this.options, e || {}), i.length > 0 || e.reset ? (r.renderElements(e), r.renderFooter(e)) : i.fetch({success: function () {
            r.renderElements(e), r.renderFooter(e)
        }}), r.setElement(n), n.addClass(r.className), r
    }, search: function () {
        var e = this, t = this.collection;
        return e
    }, renderElements: function (t) {
        var n = this, r = this.collection;
        r.each(function (t) {
            var r = n.$el.find("> [name='" + t.id + "']");
            r.length == 0 && (r = e("<div></div>"), r.attr("name", t.id), n.$el.prepend(r)), r.html(n.template(t.attributes))
        })
    }, renderFooter: function (e) {
        var t = this, n = this.collection, r = {page: this.collection.page || 1, page_length: this.collection.page_length, pages: Math.ceil(this.collection.num_results / this.collection.page_length)}, i = t.$el.find("footer");
        i.length ? i.replaceWith(t.constructor.footerTemplate(r)) : i = t.$el.append(t.constructor.footerTemplate(r)), r.page < 2 ? (i.find(".btn-fast-backward").addClass("disabled"), i.find(".btn-step-backward").addClass("disabled")) : r.page < 3 && i.find(".btn-fast-backward").addClass("disabled"), r.page > r.total - 2 ? (i.find(".btn-fast-forward").addClass("disabled"), i.find(".btn-step-forward").addClass("disabled")) : r.page > r.total - 3 && i.find(".btn-fast-forward").addClass("disabled")
    }}, {footerTemplate: t.template('            <footer>              <a class="btn btn-page btn-fast-backward"><i class="glyphicon glyphicon-fast-backward"></i></a>              <a class="btn btn-page btn-step-backward"><i class="glyphicon glyphicon-step-backward"></i></a>              <% if (page > 1) { %><a class="btn btn-page btn-page-number">1</a><% } %>              <% if (page >= 6) { %><span class="btn btn-page btn-page-ellipses">...</span><% } %>              <% if (page == 5) { %><a class="btn btn-page btn-page-number">2</a><% } %>              <% if (page > 3) { %><a class="btn btn-page btn-page-number"><%= (page-2) %></a><% } %>              <% if (page > 2) { %><a class="btn btn-page btn-page-number"><%= (page-1) %></a><% } %>              <a class="btn btn-page btn-page-number btn-page-active"><%= page %></a>              <% if (page < pages-1) { %><a class="btn btn-page btn-page-number"><%= (page+1) %></a><% } %>              <% if (page < pages-2) { %><a class="btn btn-page btn-page-number"><%= (page+2) %></a><% } %>              <% if (page == pages-3) { %><a class="btn btn-page btn-page-number"><%= (pages-1) %></a><% } %>              <% if (page <= pages-4) { %><span class="btn btn-page btn-page-ellipses">...</span><% } %>              <% if (page < pages) { %><a class="btn btn-page btn-page-number"><%= (pages) %></a><% } %>              <a class="btn btn-page btn-step-forward"><i class="glyphicon glyphicon-step-forward"></i></a>              <a class="btn btn-page btn-fast-forward"><i class="glyphicon glyphicon-fast-forward"></i></a>            </footer>        ')}), e.fn.tbcollection = function (t) {
        var n = Array.prototype.slice.call(arguments, 1);
        return this.each(function () {
            var r = e(this), s = r.data("tb.collection"), o = typeof t == "object" && t;
            s || (o.el = r, r.data("tb.collection", s = new i.BackboneCollection(o)), r.data("tb.collection").render()), typeof t == "string" && s[t].apply(s, n)
        })
    }, e.fn.tbcollection.Constructor = i.BackboneCollection, e("[data-collection][data-require]").each(function () {
        var t = e(this);
        require(e(this).data("require").split(" "), function () {
            t.tbcollection(t.data())
        })
    }), e("[data-collection]:not([data-require])").each(function () {
        var t = e(this);
        t.tbcollection(t.data())
    }), i
}).call(window), require(["jquery", "underscore", "backbone", "../."],function (e, t, n) {
    var r = this.Tornado || {}, i = this.Tornado = r;
    return i.BackboneForm = n.View.extend({initialize: function () {
        this.options.model && (t.isString(this.options.model) ? this.model = this.options.model = new window[this.options.model] : this.model = this.options.model, t.isObject(this.options.value) && this.model.set(this.options.value)), this.form = new n.Form(this.options), this.listenTo(this.form, "all", this.handleFormEvent)
    }, handleFormEvent: function (e, t, n) {
        this.trigger(e, n || t || this);
        var r = e.split(":");
        r.length > 1 && (this.trigger("tb:" + r[1], t, n), this.trigger("tb:" + r[1] + ":" + r[0], t, n))
    }, render: function () {
        var n = this.form, r = this.$el, i = this.form.fields;
        return r.find("[data-editors]").add(r).each(function (r, s) {
            var o = e(s), u = o.data("editors");
            if (t.isUndefined(u))return;
            var a = u == "*" ? n.selectedFields || t.keys(i) : u.split(",");
            t.each(a, function (t) {
                var n = i[t], r, s = n.editor.render().el;
                e.webshims ? r = o.appendPolyfill(s) : r = o.append(s)
            }), o.removeAttr("data-editors")
        }), r.find("[data-fields]").add(r).each(function (r, s) {
            var o = e(s), u = o.data("fields");
            if (t.isUndefined(u))return;
            var a = u == "*" ? n.selectedFields || t.keys(i) : u.split(",");
            t.each(a, function (n) {
                var r = i[n];
                r.schema = r.schema || {}, r.schema = t.extend(r.schema, o.data("schema"));
                var s, u = r.render().el;
                e.webshims ? s = o.appendPolyfill(u) : s = o.append(u), r.schema.editorAttrs = r.schema.editorAttrs || {}, r.schema.editorAttrs = t.extend(r.schema.editorAttrs, o.data("editorAttrs")), s.find("[data-editor] input").attr(r.schema.editorAttrs)
            }), o.removeAttr("data-fields")
        }), r.find("[data-fieldsets]").add(r).each(function (r, i) {
            var s = e(i), o = s.data("fieldsets");
            if (t.isUndefined(o))return;
            t.each(n.fieldsets, function (n) {
                var r, i = n.render().el;
                e.webshims ? r = s.appendPolyfill(i) : r = s.append(i), n.schema.editorAttrs = n.schema.editorAttrs || {}, n.schema.editorAttrs = t.extend(n.schema.editorAttrs, s.data("editorAttrs")), r.find("[data-editor] input").attr(n.schema.editorAttrs)
            }), s.removeAttr("data-fieldsets")
        }), n.setElement(r), r.addClass(n.className), n
    }}), e.fn.tbform = function (t) {
        var n = Array.prototype.slice.call(arguments, 1);
        return this.each(function () {
            var r = e(this), s = r.data("tb.form"), o = typeof t == "object" && t;
            s || (o.el = this, r.data("tb.form", s = new i.BackboneForm(o)), r.data("tb.form").render()), typeof t == "string" && s[t].apply(s, n)
        })
    }, e.fn.tbform.Constructor = i.BackboneForm, e("[data-model][data-require]").each(function () {
        var t = e(this);
        require(e(this).data("require").split(" "), function () {
            t.tbform(t.data())
        })
    }), e("[data-model]:not([data-require])").each(function () {
        var t = e(this);
        t.tbform(t.data())
    }), i
}).call(window), require(["jquery", "underscore", "backbone", "backbone_relational"],function (e, t, n, r) {
    var i = this.Tornado || {}, s = this.Tornado = i;
    return s.RelationalModel = n.RelationalModel.extend(s.Model), s
}).call(window)